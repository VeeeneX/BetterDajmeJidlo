kind: PersistentVolume
apiVersion: v1
metadata:
  name: minio-data-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/minio"
  claimRef:
    namespace: default
    name: minio-data-pvc

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: minio-data-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: "minio-data-pv"
---

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: minio
  name: minio
spec:
  selector:
    matchLabels:
      app: minio
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
        role: master
        tier: backend
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: minio
          image: minio/minio
          command: ["minio", "server", "/data", "--console-address" , ":40949"]
          env:
            - name: MINIO_ROOT_USER
              value: 'MW32h3gd6HvjBEgTRx'
            - name: MINIO_ROOT_PASSWORD
              value: 't6NgQWUcEyG2AzaDCVkN6sbWcvDCVkN6sGiZ7'
          ports:
            - containerPort: 9000
            - containerPort: 40949
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: "/data"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-data-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
    role: master
    tier: backend
spec:
  ports:
    - port: 9000
      protocol: TCP
      targetPort: 9000
      name: minio-main
    - port: 40949
      protocol: TCP
      targetPort: 40949
      name: minio-console
  selector:
    app: minio
    role: master
    tier: backend
